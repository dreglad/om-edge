proxy_cache_path  /srv/storage/video_cache  levels=1:2    keys_zone=VIDEO:10m
    inactive=1w  max_size=10g;

upstream media-gs {
    server       storage.googleapis.com:443;
    keepalive    600;
}

upstream media-origin {
    server       captura-telesur.openmultimedia.biz:80;
    keepalive    600;
}

upstream media-video {
    server       video:8080;
    keepalive    600;
}

server {
    server_name media-telesur.openmultimedia.biz;

    include includes/listen-both.conf;
    include includes/deny-robots.conf;
    include includes/only-get.conf;

    resolver                   8.8.8.8 valid=300s ipv6=off;
    resolver_timeout           10s;

    root  /srv/storage;

    proxy_store    on;
    proxy_store_access user:rw group:rw all:r;
    proxy_temp_path    /tmp/proxy_temp;

    location /hls/ {
        proxy_pass http://media-video;

        proxy_cache VIDEO;
        proxy_cache_valid 200 3w;
        add_header X-Cache-Status $upstream_cache_status;

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    location /clips/ {
        try_files $uri @cloud;
    }

    location /programas/ {
        try_files $uri @cloud;
    }

    location @cloud {
        proxy_pass https://media-gs/telesur-video-backup$uri;

        error_page 403 403 = @origin;

        add_header X-Origin gs;

        proxy_intercept_errors on;
        recursive_error_pages on;

        proxy_http_version  1.1;

        proxy_set_header        Connection "";
        proxy_set_header        Host storage.googleapis.com;
        proxy_hide_header       alt-svc;
        proxy_hide_header       X-GUploader-UploadID;
        proxy_hide_header       alternate-protocol;
        proxy_hide_header       x-goog-hash;
        proxy_hide_header       x-goog-generation;
        proxy_hide_header       x-goog-metageneration;
        proxy_hide_header       x-goog-stored-content-encoding;
        proxy_hide_header       x-goog-stored-content-length;
        proxy_hide_header       x-goog-storage-class;
        proxy_hide_header       x-xss-protection;
        proxy_hide_header       accept-ranges;
        proxy_hide_header       Set-Cookie;
        proxy_ignore_headers    Set-Cookie;
    }

    location @origin {
        proxy_pass http://media-origin/media$uri;

        add_header X-Origin remotes;

        proxy_intercept_errors on;

        proxy_http_version      1.1;
        proxy_hide_header       accept-ranges;
        proxy_hide_header       Set-Cookie;
        proxy_set_header        Connection "";
        proxy_hide_header       Range;
        proxy_set_header Host $host;
    }

    location @error404 {
        return 404;
    }
}
